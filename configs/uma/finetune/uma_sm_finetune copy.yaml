defaults:
  - cluster: h100_local
  - tasks: uma_conserving_stress
  - _self_

job:
  device_type: ${cluster.device}
  scheduler:
    mode: ${cluster.mode}
    ranks_per_node: ${cluster.ranks_per_node}
    num_nodes: 1
    slurm:
      account: ${cluster.account}
      qos: ${cluster.qos}
      mem_gb: ${cluster.mem_gb}
      cpus_per_task: ${cluster.cpus_per_task}
  debug: ${cluster.debug}
  run_dir: ${cluster.run_dir}
  run_name: uma_finetune
  logger:
    _target_: fairchem.core.common.logger.WandBSingletonLogger.init_wandb
    _partial_: true
    entity: example
    project: uma_finetune


snapshot_dir: fm_training/dataset_sync_250225
# starting_checkpoint: "/home/rgao/.cache/huggingface/hub/models--facebook--UMA/blobs/3b6953c0efa36f5bb5ef6de058226d97aaa1d225e3c745f2ce77d12037ef4994"
starting_checkpoint: "/checkpoint/ocp/shared/uma/release/uma_sm_converted.pt"
max_neighbors: 300
cutoff_radius: 6
epochs: null
steps: 1000000
max_atoms: 350
min_atoms: 0
cpu_graph: True

regress_stress: True


omc_train:
  splits:
    train:
      sample_n: 10000
      src: ${cluster.data_root_dir}/${snapshot_dir}/csp/250225/val/
  format: ase_db
  a2g_args:
    r_forces: True
    r_energy: True
    r_edges: ${cpu_graph}
    r_stress: ${regress_stress}
    max_neigh: ${max_neighbors}
    radius: ${cutoff_radius}
  transforms:
    common_transform:
      dataset_name: ${tasks.dataset_name}
    stress_reshape_transform:
      dataset_name: ${tasks.dataset_name}

omc_val:
  splits:
    val:
      sample_n: 10
      src: ${cluster.data_root_dir}/${snapshot_dir}/csp/250225/val/
  format: ase_db
  a2g_args:
    r_energy: True
    r_forces: True
    r_edges: ${cpu_graph}
    r_stress: ${regress_stress}
    max_neigh: ${max_neighbors}
    radius: ${cutoff_radius}
  transforms:
    common_transform:
      dataset_name: ${tasks.dataset_name}
    stress_reshape_transform:
      dataset_name: ${tasks.dataset_name}



train_dataset:
  _target_: fairchem.core.datasets.mt_concat_dataset.create_concat_dataset
  dataset_configs:
    omc: ${omc_train}
  combined_dataset_config: { sampling: {type: temperature, temperature: 1.0} }

train_dataloader:
  _target_: fairchem.core.components.common.dataloader_builder.get_dataloader
  dataset: ${train_dataset}
  batch_sampler_fn:
    _target_: fairchem.core.datasets.samplers.max_atom_distributed_sampler.MaxAtomDistributedBatchSampler
    _partial_: True
    max_atoms: ${max_atoms}
    min_atoms: ${min_atoms}
    shuffle: True
    seed: 0
  num_workers: ${cluster.dataloader_workers}
  collate_fn:
    _target_: fairchem.core.units.mlip_unit.mlip_unit.mt_collater_adapter
    tasks: ${tasks.tasks_list}

val_dataset:
  _target_: fairchem.core.datasets.mt_concat_dataset.create_concat_dataset
  dataset_configs:
    omc: ${omc_val}
  combined_dataset_config: { sampling: {type: temperature, temperature: 1.0} }

eval_dataloader:
  _target_: fairchem.core.components.common.dataloader_builder.get_dataloader
  dataset: ${val_dataset}
  batch_sampler_fn:
    _target_: fairchem.core.datasets.samplers.max_atom_distributed_sampler.MaxAtomDistributedBatchSampler
    _partial_: True
    max_atoms: ${max_atoms}
    min_atoms: ${min_atoms}
    shuffle: False
    seed: 0
  num_workers: ${cluster.dataloader_workers}
  collate_fn:
    _target_: fairchem.core.units.mlip_unit.mlip_unit.mt_collater_adapter
    tasks: ${tasks.tasks_list}

runner:
  _target_: fairchem.core.components.train.train_runner.TrainEvalRunner
  train_dataloader: ${train_dataloader}
  eval_dataloader: ${eval_dataloader}
  train_eval_unit:
    _target_: fairchem.core.units.mlip_unit.mlip_unit.MLIPTrainEvalUnit
    job_config: ${job}
    tasks: ${tasks.tasks_list}
    model:
      _target_: fairchem.core.units.mlip_unit.mlip_unit.initialize_finetuning_model
      checkpoint_location: ${starting_checkpoint}
      overrides:
        backbone:
          max_neighbors: ${max_neighbors}
          regress_stress: ${regress_stress}
        pass_through_head_outputs: True
      heads:
        energyandforcehead:
          module: fairchem.core.models.uma.escn_md.MLP_EFS_Head

        # energyandforcehead:
        #   module: fairchem.core.models.uma.escn_moe.DatasetSpecificSingleHeadWrapper
        #   head_cls: fairchem.core.models.uma.escn_md.MLP_EFS_Head
        #   head_kwargs:
        #     wrap_property: False
        #   dataset_names:
        #     - ${tasks.dataset_name}
    optimizer_fn:
      _target_: torch.optim.AdamW
      _partial_: true
      lr: 4e-4
      weight_decay: 1e-3
    cosine_lr_scheduler_fn:
      _target_: fairchem.core.units.mlip_unit.mlip_unit._get_consine_lr_scheduler
      _partial_: true
      warmup_factor: 0.2
      warmup_epochs: 0.01
      lr_min_factor: 0.01
      epochs: ${epochs}
      steps: ${steps}
    print_every: 10
    clip_grad_norm: 100
  max_epochs: ${epochs}
  max_steps: ${steps}
  evaluate_every_n_steps: 10000
  callbacks:
    - _target_: fairchem.core.components.train.train_runner.TrainCheckpointCallback
      checkpoint_every_n_steps: 5000
      max_saved_checkpoints: 5
